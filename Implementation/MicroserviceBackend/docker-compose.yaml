version: "3.9"

services:
  # ───────── Infrastructure ─────────────────────────────────────────
  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: appdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:               # optional → expose for local SQL clients
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    restart: unless-stopped
    ports:               # 5672 = AMQP, 15672 = management UI
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ───────── Authentication micro‑service ───────────────────────────
  auth-svc:
    build:
      context: ./AuthenticationService
      target: runtime      # <-- explicitly ask for slim image
    environment:
      PORT: 3000
      DATABASE_URL: postgres://app:secret@postgres:5432/appdb
      RABBITMQ_URL: amqp://rabbitmq:5672
      ACCESS_SECRET: dev_access_secret         # ↓ sample placeholders
      REFRESH_SECRET: dev_refresh_secret
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
          condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  pgdata:
